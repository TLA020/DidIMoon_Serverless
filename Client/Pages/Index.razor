@page "/"
@using Client.Infrastructure.Services
@using global::Shared.Models
@inject ICoinService coinService

<div class="mt-6 text-black font-bold text-2xl">
    <h2>Did you moon?</h2>
</div>
<div class="flex flex-col bg-white max-w mt-3 px-6 pb-4 pt-1 mx-auto rounded-lg shadow-md">
    <EditForm Model="@request" OnValidSubmit="@OnSubmit">
        <DataAnnotationsValidator />
        <div class="mb-4">
            <label for="Coin" class="font-semibold text-gray-500">
                Currency
            </label>

            <BlazoredTypeahead SearchMethod="SearchCoins"
                               @bind-Value="request.Coin">
                <SelectedTemplate Context="coin">
                    @coin.Name (@coin.Symbol)
                </SelectedTemplate>
                <ResultTemplate Context="coin">
                    @coin.Name (@coin.Symbol)
                </ResultTemplate>
            </BlazoredTypeahead>
            <ValidationMessage For="@(() => request.Coin)" />
        </div>

        <div class="mb-4">
            <label for="amount" class="font-semibold text-gray-500">
                Amount (Dollar)
            </label>
            <InputNumber id="title" @bind-Value="request.Amount" class="w-full h-10 px-2 py-3 transition duration-300 border border-gray-300 rounded focus:border-transparent focus:outline-none focus:ring-2 focus:ring-blue-200" />
        </div>

        <div class="mb-4">
            <label for="date" class="font-semibold text-gray-500">
                Date
            </label>
            <InputDate id="date" min="2009-01-09" @bind-Value="request.Date" class="w-full h-10 px-2 py-3 transition duration-300 border border-gray-300 rounded focus:border-transparent focus:outline-none focus:ring-2 focus:ring-blue-200" />
        </div>

        <button type="submit" class="bg-blue-700 hover:bg-blue-500 text-white rounded shadow-md p-2">
            Calculate
        </button>
    </EditForm>
</div>

@if (Profit != default)
{
    <div class="mt-6 text-black font-bold text-2xl">
        <h2>Profit</h2>
    </div>
    <div class="flex flex-col bg-white max-w mt-3 px-6 pb-4 pt-1 mx-auto rounded-lg shadow-md">
        <h3>
            @(string.Format("${0:N2}", Profit))
        </h3>
    </div>
}


@code
{
    private MoonRequest request = new MoonRequest();
    private List<CryptoCurrency> Coins;
    private decimal Profit;

    protected override async Task OnInitializedAsync()
    {
        Coins = await coinService.CoinList();
    }

    private async Task<IEnumerable<CryptoCurrency>> SearchCoins(string searchText)
    {
        return await Task.FromResult(Coins.Where(c => c.Symbol.ToLower().Contains(searchText.ToLower()) || c.Name.ToLower().Contains(searchText.ToLower())).ToList());
    }

    private async Task OnSubmit()
    {
        var amountThen = await coinService.GetAmount(request.Coin, request.Amount, request.Date);
        var worthNow = await coinService.GetValue(request.Coin, amountThen, DateTime.Now);

        Profit = worthNow - request.Amount;
    }
}
